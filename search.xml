<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Ubuntu1604安装Pantheon桌面环境]]></title>
      <url>http://yoursite.com/2017/03/14/Ubuntu1604%E5%AE%89%E8%A3%85Pantheon%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/</url>
      <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote>
<p>首先，我已经装上并用了一天了，没发现甚么问题．（但不代表你安装就不会出现问题．所以提前备份重要文件还是有必要的）<br>下面让我们来安装这个号称Linux最漂亮的一款桌面环境吧．(Unity党表示不服)</p>
</blockquote>
<p>在终端输入以下的命令：</p>
<pre><code>$ sudo add-apt-repository ppa:elementary-os/daily
$ sudo add-apt-repository ppa:elementary-os/os-patches
$ sudo add-apt-repository ppa:elementary-os/testing
$ sudo add-apt-repository ppa:mpstark/elementary-tweaks-daily
$ sudo apt-get update
$ sudo apt-get dist-upgrade
$ sudo apt-get install elementary-theme elementary-icon-theme elementary-default-settings elementary-desktop
</code></pre><p>从 Elementary OS　官方源安装Pantheon桌面环境的话: (我用的是上面的，一次就ok了，所以下面这个方法没有测试，想来也不会有什么问题)</p>
<pre><code>$ sudo add-apt-repository ppa:elementary-os/stable
$ sudo apt-get update
$ sudo apt-get install elementary-desktop
</code></pre><p><strong>然后重启，在登录窗口选择Pantheon就好了．(注意如果你设置了开机不需要登录的话，关掉它.)</strong></p>
<p>Good luck!</p>
<p><a href="https://askubuntu.com/questions/766673/pantheon-on-ubuntu-16-04" target="_blank" rel="external">命令来源</a></p>
<hr>
<h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键:"></a>快捷键:</h3><p><strong>所有的快捷键都可以在系统的 Settings –&gt; Keyboard 里自行设置</strong></p>
<p>Win + W　: 程序窗口预览<br>Win + A : 程序窗口预览（涉及所有桌面）<br>Win + Tab : 转换桌面窗口<br>Win + S : 打开左上角的应用搜索窗口<br>Ctrl + Win + 方向键 : 改变当前应用窗口的形状<br>Win + L : 锁屏</p>
<hr>
<h3 id="两天后再记："><a href="#两天后再记：" class="headerlink" title="两天后再记："></a>两天后再记：</h3><p><strong>如何卸载Pantheon桌面环境？</strong></p>
<p>安装一个包管理工具：<code>sudo apt-get install synaptic</code><br>管理员权限运行：　<code>sudo synaptic</code><br>搜索 <code>elementary</code><br>把所有被选中的方格全部标记为　<code>完全移除（complete removal）</code><br>然后　<code>应用（Apply）</code><br><code>DONE!</code></p>
<p><a href="https://askubuntu.com/questions/228996/how-to-remove-elementary-desktop-environment" target="_blank" rel="external">命令来源</a></p>
<hr>
<p>是的，我又换回了Ubuntu自带的Unity…因为发现除了Pantheon的外观，其他的诸如多桌面，切换应用,应用不能缩下去．．．都不习惯，sigh.<br>果然，Linux的DE有毒．</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[谈谈我对cookie和signedCookie的理解]]></title>
      <url>http://yoursite.com/2017/02/19/%E8%B0%88%E8%B0%88%E6%88%91%E5%AF%B9cookie%E5%92%8CsignedCookie%E7%9A%84%E7%90%86%E8%A7%A3/</url>
      <content type="html"><![CDATA[<p><strong>写在前面</strong></p>
<p>今天打算给我的<a href="https://github.com/shuiRong/login-register" target="_blank" rel="external">登录注册模块</a>完善功能,加上记录用户的登录状态(就是用户只需要在第一次登录网站时输入密码,以后不用输入了).只知道可能和sessoin/cookie有关系.但我一直对这两个名词代表着什么不了解.别惊讶,之前真的一点也不了解.今天正好遇到了,就谷歌了很多博文看.然后写demo练习.到现在为止,掌握的程度已经能满足需求了.</p>
<p>趁这次机会,把我对 <code>cookie/session/signedCookie</code> 的理解记录下来.因为一旦不用,立马就忘了…</p>
<hr>
<ol>
<li>cookie: 本质是存储在客户端(约等于浏览器)的键值对.一般用来记录用户在这个网站的状态信息.</li>
<li>session: 本质是存储在服务器端的键值对,也是一般用来记录用户在这个网站的一些信息.</li>
<li>signedCookie: 签过名的cookie , 也可以理解为进行了加密处理的cookie.</li>
</ol>
<hr>
<p><strong>举个生动的例子:</strong></p>
<p>小明打开一个网站,在输入帐号密码后,点击登录按钮.服务器端在判断小明输入的帐号密码都没问题后,把小明的用户名: xiaoming 和年龄: 13 和一个”随机生成的”字符串: zxljckajsdlasm 用加密算法(比如MD5) 加密,生成了一个 16进制字符串 20859b490041d5b0cc4836342a22c3a7 然后服务器把 {username: ‘xiaoming’,age:’13’,connect.sid:’20859b490041d5b0cc4836342a22c3a7’} 发送给了客户端的cookie保存起来(cookie的期限可以设定为30天).</p>
<p>第二天,小明又想登录这个网站,页面加载的同时,浏览器就把这个网站的cookie发送到了服务器端,服务器拿到cookie之后,把里面的用户名和年龄取出来和之前的那个字符串放一起,再用MD5加密,把新生成的字符串和cookie里的connect.sid作对比,如果一样,就说明一切正常,正在打开网站的这个人是xiaoming,而不是xiaohong.</p>
<p><em>上面例子中 把cookie和字符串放到一起加密并且把加密后的字符串加入到cookie里 这一过程,就叫signedCookie</em></p>
<p>为什么说signedCookie比普通的cookie要更安全呢?关键就是加密这一步!</p>
<p><strong>再举个生动的例子:</strong></p>
<p>假如李华是黑客,想登录某(上面那个)网站的小明的帐号,就想办法把这个网站的cookie里的username和age改成了小明的.但是,这是行不通的!因为服务器端针对每个用户都生成过一个随机的字符串,虽然cookie的username和age改了,但是服务器端在加密的时候用的可不是小明的那个字符串,所以加密结果也不可能和正确的一样.所以cookie信息就不怕别修改了.</p>
<p><strong>附加</strong><br>认真的考虑了signedCookie,我有一点还有疑问: 那就是服务器端是依据什么判断而去使用某个”随机字符串”的?根据IP地址?还是浏览器的request信息?还是其他的我不知道的某个东西?<br>如果这个问题解决了,关于signedCookie,我就没有疑问了!<br>但是 How?</p>
<p>希望有知道解决方法的不吝赐教!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Express/MongoDB/登录注册模块]]></title>
      <url>http://yoursite.com/2017/02/19/Express-MongoDB-%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E6%A8%A1%E5%9D%97/</url>
      <content type="html"><![CDATA[<p><strong>写在前面</strong><br>为了练习Express.js框架，写了个<a href="https://github.com/shuiRong/Ask-Answer" target="_blank" rel="external">问答网站</a>。最近打算把登录注册功能添加上。所以另外开了个repo,先单独实现下这个功能。</p>
<p><strong>思路分析</strong></p>
<pre><code>代码写的多了就会发现:不论写什么项目,&quot;思路&quot;是比&quot;动手写代码&quot;要重要的.
理想的情况就是: 花几个小时想思路,想细节.然后噼里啪啦几十分钟写完了.
</code></pre><p>注册的本质就是：把用户输入的（合法的）帐号密码存到数据库里。<br>登录的本质就是：检测用户输入的帐号在不在数据库里，然后再检查密码对不对。</p>
<hr>
<p>当然实际上登录注册没这么简单.验证帐号密码的合法性就不说了.还有:</p>
<ul>
<li>密码在存进数据库前要加密(MD5)</li>
<li>用Session(cookie)实现所谓的”记住密码”功能(下一次打开网站无需登录)</li>
<li>注册时使用邮箱(短信)进行验证,以后还可以用它进行重置等服务.</li>
<li>第三方登录</li>
<li>(差点忘了) 验证码</li>
</ul>
<hr>
<p>代码写好了: <a href="https://github.com/shuiRong/login-register" target="_blank" rel="external">Github地址</a></p>
<hr>
<p><strong>PS: </strong><br>最后说说怎么学习MongoDB/mongoose.<br>相比于在项目实战中学习,我倒是觉得还是老实跟着文档一个点一个点的过更好! 这里推荐两个Gitbook(我都看过):<br><a href="https://jockchou.gitbooks.io/getting-started-with-mongodb/content/" target="_blank" rel="external">MongoDB入门指南</a><br><a href="https://i5ting.github.io/wechat-dev-with-nodejs/db/mongoose.html" target="_blank" rel="external">mongoose入门</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[跨域访问的解决方法]]></title>
      <url>http://yoursite.com/2016/10/16/%E8%B7%A8%E5%9F%9F%E8%AE%BF%E9%97%AE%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      <content type="html"><![CDATA[<p><strong>10-18补充：</strong></p>
<p>解决跨域的问题，只要你清楚这两个概念就够了：</p>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS" target="_blank" rel="external">跨域访问（Cross-site HTTP request）的详细介绍。</a></li>
<li><a href="http://www.cnblogs.com/dowinning/archive/2012/04/19/json-jsonp-jquery.html" target="_blank" rel="external">谈谈JSON和JSONP的区别</a></li>
</ul>
<hr>
<p><em>我在调用Wiki的API时又遇到了跨域访问问题，第二次了</em></p>
<blockquote>
<p>No ‘Access-Control-Allow-Origin’ header is present on the requested resource.<br>Origin ‘null’ is therefore not allowed access.</p>
</blockquote>
<p>第一次是调用聚合天气的数据时，我用jQuery的.ajax()获取数据时遇到了这个问题。当时着实困扰了我好久。在网上搜了搜也还是不知道如何解决。后来参考了别的同学的代码，看他在获取数据时用的是.getJSON()，我也换成了这方法，果然没有上面的问题了。但是我不知道问题的原因，以及为何换个方法就不会出现。现在还是不知道（过段时间http协议相关的书还是要看的，看了之后应该就知道这个问题该如何解决了吧）。</p>
<hr>
<p>这个问题是如何出现的，以及如何解决网上也有方法，不过要是没有解决你的问题的话，不妨看看这个：</p>
<blockquote>
<p>If you want to load an api URL from another domain, you should use $.getJSON and provide a callback=yourFunction (or similar) to the URL so you are in fact requesting a JSONP.<br><a href="https://www.mediawiki.org/wiki/Topic:Smsi5v9mg0po0dn0" target="_blank" rel="external">引用来源</a></p>
</blockquote>
<p>上面黑体句子的意思，重点说下：</p>
<p>在调用Wiki的API时，第一次我是这么写的：</p>
<pre><code>var url = &#39;.../api.php?action=opensearch&amp;prop=revi&#39; + 
&#39;sions&amp;rvprop=content&amp;format=json&amp;search=&#39;;
var search_text = &#39;taylor swift&#39;; //这个搜索信息是动态获取的，为了方便，我这里写死了。
var url = url + search_text;

$.ajax({
    url: url,
    dataType: json,
    success:function(data){
        console.log(data[1]);
    }
    });
</code></pre><p>结果出问题，就是文章开始说的那个。</p>
<p>第二次我写时，只改了方法：</p>
<pre><code>......//跟上面一样。

$.getJSON(url,{
            dtype: &#39;json&#39;,
        },function(data){
            console.log(1,data[1]);
        });
</code></pre><p>还是同样问题。</p>
<p>然后我又去看上面那段英文，认真想了想黑体字部分的意思，写了第三遍：</p>
<pre><code>var url = &#39;https://en.wikipedia.org/w/api.php?callback=?&#39;; //看这里有变化了
var search_text = &#39;taylor swift&#39;;

$.getJSON(url,{
            dtype: &#39;json&#39;,
            search: search_text,
            format: &#39;json&#39;,
            action: &#39;opensearch&#39;,
        },function(data){
            console.log(1,data[1]);
        });
</code></pre><p>correct.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JS构建正则时的一处致命细节，请注意]]></title>
      <url>http://yoursite.com/2016/09/24/JS%E6%9E%84%E5%BB%BA%E6%AD%A3%E5%88%99%E6%97%B6%E7%9A%84%E4%B8%80%E5%A4%84%E8%87%B4%E5%91%BD%E7%BB%86%E8%8A%82%EF%BC%8C%E8%AF%B7%E6%B3%A8%E6%84%8F/</url>
      <content type="html"><![CDATA[<p>JavaScript构建正则对象有两种方法：</p>
<ul>
<li>字面量: /ab+c/i;</li>
<li>构造函数: （还可以细分一下）<ul>
<li>new RegExp(‘ab+c’, ‘i’);</li>
<li>new RegExp(/ab+c/, ‘i’);</li>
</ul>
</li>
</ul>
<p>当我们构建正则对象时，会有一些特殊字符，需要特殊处理，也就是转义。<br>JavaScript的转义符和其他语言的一样： \  反斜杠。<br><strong>需要注意的是：</strong><br>当用正则构造函数创造正则对象时，转义需要两个 \\ 反斜杠。当然，字面量时一个就够了。<br>以下两个是等价的：</p>
<blockquote>
<p>var re = new RegExp(“\\w+”);<br>var re = /\w+/;</p>
</blockquote>
<hr>
<p>刚被这两个反斜杠坑了。差点怀疑人生…</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[这些年读书的一些破事儿]]></title>
      <url>http://yoursite.com/2016/09/04/%E8%BF%99%E4%BA%9B%E5%B9%B4%E8%AF%BB%E4%B9%A6%E7%9A%84%E4%B8%80%E4%BA%9B%E7%A0%B4%E4%BA%8B%E5%84%BF/</url>
      <content type="html"><![CDATA[<p>早就想找个机会写写我这些年读书的破事儿了，一次在知乎上看到了个关于“阅读困难症”的问题，就顺便着总结了这些年（其实是从6、7岁开始）读书的经历。</p>
<p>这里不复制过来了。<a href="https://www.zhihu.com/question/31566591/answer/106730426" target="_blank" rel="external">贴个链接</a>，诸君过去看吧。看完觉得不错，就点个赞吧。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Flask/部署/Heroku 目前应该是相关方向上最详细的一篇总结]]></title>
      <url>http://yoursite.com/2016/09/04/Flask%20%E9%83%A8%E7%BD%B2%20Heroku%20%E7%9B%AE%E5%89%8D%E5%BA%94%E8%AF%A5%E6%98%AF%E7%9B%B8%E5%85%B3%E6%96%B9%E5%90%91%E4%B8%8A%E6%9C%80%E8%AF%A6%E7%BB%86%E7%9A%84%E4%B8%80%E7%AF%87%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>﻿</p>
<p>本文首发于<a href="http://cocode.cc/t/flasky-heroku/6589" target="_blank" rel="external">CoCode社区</a><br><strong>写在前面</strong></p>
<ul>
<li>看的书是《Flask Web 开发》</li>
<li>win7 64bit 系统。</li>
<li>有些东西需要科学上网，[正好前几天为我弟弟普及了下科学上网]</li>
</ul>
<p>(<a href="http://pan.baidu.com/s/1qYVFeMw" target="_blank" rel="external">http://pan.baidu.com/s/1qYVFeMw</a>)</p>
<ul>
<li>从开始部署到成功，花了我3、4天。期间尝试过SAE（不知去查），没成。</li>
<li>这几天里，我部署了有十几次。（这十几次的意思是，从17c开始，重来。</li>
</ul>
<p>）</p>
<ul>
<li>我把论坛里用关键词 “flask 部署” 搜出来的部署在heroku上的文章反复看了不知道几遍了。反正</li>
</ul>
<p>烂熟了。所以发现了一些他们各自的问题。</p>
<ul>
<li>所以，这次总结我不打算再像其他人一样从开始写了（你可以小声的说宝宝懒）。下面我以三篇论坛</li>
</ul>
<p>里的帖子为例，说说如何部署在heroku上。</p>
<hr>
<ul>
<li>@guog  <a href="http://cocode.cc/t/first-update-heroku/3711" target="_blank" rel="external">把我点开先放一边</a></li>
<li>@Rain  <a href="http://cocode.cc/t/flask-heroku/4253" target="_blank" rel="external">把我点开先放一边</a></li>
</ul>
<hr>
<p><strong>正文预备</strong><br>宝宝心里苦啊，但是宝宝不说话。放一张漫画大家感受下：<br> <a href="http://www.cxyym.com/wp-content/uploads/2014/07/53_%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.gif" target="_blank" rel="external">点我看漫画</a><br>西乔说到我心里去了。</p>
<p><strong>正文开始</strong><br> <em>来，我们看 @guog 的帖子。</em></p>
<p>1、2 我的坑是：</p>
<blockquote>
<p>然后全部copy到你的app目录下</p>
</blockquote>
<ul>
<li>前几次，我其实没有理解他的话，我的做法曾是：把从作者那里clone的flasky文件夹下的所有东西，</li>
</ul>
<p>全部copy到自己的文件夹下（就是从自己github上clone下来后的那个myapp文件夹）。</p>
<ul>
<li>这时注意：这两个文件夹下都有.git文件夹（这是个隐藏的文件夹，记得设置查看隐藏文件），我在</li>
</ul>
<p>copy时会出现：是否替换还是什么的。我选择的是全部替换。但错了。我要是都替换了。那 @guog 的这</p>
<p>么写的目的是啥。替换了还不如就在作者的文件夹（flasky）下操作呢。</p>
<ul>
<li>就这样，最后 run python manage.py deploy 时我遇到报错了，谷歌过…最后去stackoverflow上提</li>
</ul>
<p>问了：<br> <a href="https://stackoverflow.com/questions/37763278/how-to-chain-two-migrations-through-migraions-ids-and-to-create-a-linear-chain-t" target="_blank" rel="external">详情点这里</a>，《flask web 开发》的作者</p>
<p>回答了我的白痴问题（当然是现在这么觉得了，当时差点被搞死），觉得还是挺不好意思的。</p>
<ul>
<li>后来看了大神的在stackoverflow上的回答，看了他专门针对此问题写的文章。并按照文章中给的方法</li>
</ul>
<p>试这解决我这个 linear sequence 问题，但是没成功。后来灵光一闪，突然就知道问题出在哪了。</p>
<ul>
<li>看下上面，就是在copy作者flasky文件下的文件时，<strong>不要copy作者的.git 文件夹</strong>。README.md文</li>
</ul>
<p>件无所谓。</p>
<ul>
<li>至于requirements.txt文件，我曾用的是 pip freeze &gt; requirements.txt 得来的文件。但是，**或</li>
</ul>
<p>许**是因为一些模块版本原因导致的模块不兼容，在我成功 heroku run python manage.py deploy 并</p>
<p>成功访问网站后，出现不能成功确认用户（发送确认邮件后，点击邮件内URL，出来的页面仍然是你的账</p>
<p>户没有确认。用heroku logs 查看报错信息：typeerror ‘nonetype’ object has no attribute </p>
<p>‘<strong>getitem</strong>‘ ）</p>
<ul>
<li>这个问题，我google 了一番，看了几个stackoverflow上的回答。仍不能解决问题。因为我确认，相</li>
</ul>
<p>关代码并没有出现问题。（而且，本地测试一切正常）</p>
<ul>
<li>还是灵光一闪，（真的，骗人是小狗。）我想：可能是requirements.txt文件的原因。我就把 @guog </li>
</ul>
<p>帖子里的 文件内容copy到了我那个里面。ok,解决账户确认问题。</p>
<hr>
<p>3  步我的坑：</p>
<ul>
<li>推荐用 sina、或者 qq 的stmp 服务，gmail的我试过，没有搞定。对应的端口号你去搜吧。我用的</li>
</ul>
<p>sina, sina的是25。</p>
<ul>
<li>邮件抬头我没有改，我曾想改成中文的，却出现编码问题（因为急着网站上线，暂时不想去解决额外</li>
</ul>
<p>的问题。）</p>
<ul>
<li>管理员邮箱这么改：<br>FLASKY_MAIL_SENDER = “xxxxxxxx@xxxx.com” #不要留着尖括号和前面的英文。不信你本地测试下这</li>
</ul>
<p>两种。</p>
<hr>
<p>下面第二步的<br>4 的坑：</p>
<ul>
<li>或许你安装模块的时候，psycopg2 这个会最后会安装失败，这个时候，你把requirements.txt 文件</li>
</ul>
<p>里的psycopg2 先删掉，然后pip install -r requiremens.txt 然后，单独安装psycopy2 :pip install </p>
<p>psycopg2。最后再把psycopg2 加到requirements.txt文件里。</p>
<hr>
<p>6 的坑：</p>
<ul>
<li>打开data-dev.sqlite 文件（需要下载一个软件才能打开数据库文件：DB Browser for SQLite 官网</li>
</ul>
<p>下载去吧。需要科学上网。）<a href="http://cocode.cc/t/flasky-
heroku/6589" target="_blank" rel="external">这个位置有两张图，点我看</a><br>第一张那个看看有内容没，没得话新建记录，改成我那样。第二张，属性role_id那里值是NULL的话加上</p>
<p>。懂什么意思吧？</p>
<hr>
<p>下面第三步，我们看 @Rain 的帖子。</p>
<p>1 的说明：</p>
<ul>
<li><p>heroku 免费账户，最多只能存在5个app，想删除的话：</p>
<p> heroku apps<br> heroku apps:destroy your_app_name</p>
</li>
</ul>
<p>这几个命令是通过 heroku apps –h (或者heroku –h)学会的。</p>
<hr>
<p>4  的坑：</p>
<ul>
<li>至今我仍不懂论坛里不光是 @Rain ，还有其他人说的db.session.commit()<br>是什么意思。我曾把我 <strong>所有程序</strong> 里的db.session.add()后面都加上这个。但是报错了。</li>
</ul>
<p>indentation error:unexpected indent. 我又重来了一遍，这次没有所有的地方都加</p>
<p>db.session.commit()。</p>
<ul>
<li>现在我想想，大家讨论这个事情，大部分集中在15年12月份，说什么不是flask的问题，是heroku的坑</li>
</ul>
<p>。我想，或许当时是这样吧。但是现在貌似已经不存在那个问题了。所以， **不要纠结论坛里那些人15</p>
<p>年12月份讨论的这个问题了**</p>
<ul>
<li>忽略4的这个添加。</li>
</ul>
<hr>
<p>5 ：</p>
<ul>
<li>我是win7 64bit，没看这一步在说啥。</li>
</ul>
<hr>
<p>部署过程的：<br>1 的坑：</p>
<ul>
<li>我曾在后面git push heroku master 时，报错：push rejected…..</li>
<li><a href="https://segmentfault.com/q/1010000005672524" target="_blank" rel="external">错误详情点我</a>，比较苦逼的是，在segmentfault </li>
</ul>
<p>上提的这个问题，他喵的还是我自己回答的。</p>
<ul>
<li>顺便一提，解决方法，我还是灵光一闪，想到的。（不骗人）</li>
<li>容我扯个淡：很久之前在知乎上看到这个问题，大概是：国内程序猿圈子有了stackoverflow，还有必<br>要存在像segmentfault这样的专注于中文的平台吗？</li>
<li>我觉得没有，因为对一个 <strong>程序猿</strong> 来说，能阅读英文的专业性文章（由词典，划词插件帮助也行</li>
</ul>
<p>）应该像科学上网是 <strong>标配</strong> 一样 是标配。否则，走不了多远吧。</p>
<ul>
<li>heroku上的帮助文档关于buildpacks,我也看了，最后解决方法看上面segmentfault链接。</li>
</ul>
<hr>
<p>2 的坑：</p>
<ul>
<li>其实在意初次建立数据库时，并不会看到 @Rain 说的看到像<br>HEROKU_POSTGRESQL_MAUVE_URL<br>这样的内容，而是一些像：<br>postgresql-xxxxx-xxxxx<br>这样的数据库名称。</li>
</ul>
<hr>
<p>4、5 步说明：</p>
<ul>
<li>我没试。直接略过了。</li>
</ul>
<hr>
<p>7 的说明：</p>
<ul>
<li>到这一步，就像 @Rain 说的，首先git status .检查一下，是不是所有改动都已提交到你的本地git </li>
</ul>
<p>仓库。</p>
<ul>
<li><p>PS：我说几个git 命令，你看你了解了吗。</p>
<p> git remote -v<br> git branch -v<br> git log –oneline –decorate<br> git add .<br> git commit -m “msg”<br> git log –pretty=format:”%h %s” –graph<br> git merge branch_name<br><a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%85%B3%E4%BA
%8E%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6" target="_blank" rel="external">有一个不了解的就点我</a>  然后至少看到3.5再继续下面的。因为有好多问题就是</p>
</li>
</ul>
<p>git 本地仓库管理方面的问题。</p>
<ul>
<li>在进行下一步的 git push heroku master 时，会报错，其中的一些报错前面我已经说过了。但你还</li>
</ul>
<p>是有可能遇到一些我没提到的报错。这时： **你要一行一行的认真看报错信息。提取关键信息，then </p>
<p>google it .**</p>
<hr>
<p>后来这几步，我也遇到了 报错。</p>
<ul>
<li>heroku logs </li>
<li>提取关键错误信息</li>
<li>google it </li>
</ul>
<hr>
<p><strong>写在后面的</strong></p>
<ul>
<li>Git 算是真的会了。（但是一些深层的不怎么用到的还是不会，不过不怕，用时再现学。）</li>
<li>flask app  部署在heroku过程中用到的命令是烂熟于心了。（十几遍啊，宝宝心里苦啊。）</li>
<li>以前学初Java时，没翻墙，用的是Bing。搜索报错信息时，往往遇到第一页，有好几个博客内容一模</li>
</ul>
<p>一样。当我点开一个又一个链接看到这情形，那叫一个难受啊。后来就受不了了，网上到处搜科学上网</p>
<p>方法。最终用上了google。<strong>那叫一个爽</strong> <strong>谁用谁知道</strong></p>
<ul>
<li>stackoverflow 对新手，小白挺友好的，但是你最好先善用google。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Javascript：正则表达式里使用变量的方法]]></title>
      <url>http://yoursite.com/2016/09/04/Javascript%EF%BC%9A%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%87%8C%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>﻿</p>
<p>做FFC算法题的时候，想把变量用到正则模式里。结果在正则字面量里，不论如何加都是不行的，正则模式都会把变量当作表面上的字符串来处理。</p>
<p>只好用Google大法了，找到办法：<br>正则有两种定义方法：</p>
<pre><code>* 字面量定义。（不可以使用变量。）
* 正则对象定义。（可以使用变量。）
</code></pre><p>文档：<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[比较全面的 科学上网 FQ教程]]></title>
      <url>http://yoursite.com/2016/09/04/%E6%AF%94%E8%BE%83%E5%85%A8%E9%9D%A2%E7%9A%84%20%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%20FQ%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p><strong>写在前面：</strong></p>
<ul>
<li>相比于网上的大部分同类文章，我写的还是比较简单易懂的。</li>
<li>墙这个事，细思极恐。恐的当然不是“墙”本身，而是时间久了，一些人觉得这才是“真正的互联网”。</li>
</ul>
<hr>
<p>我下面只给出可用方法，具体教程自己搜。而且下面方法针对Windows 平台。Linux/Mac的话，都用上Linux/Mac了还不会科学上网可说不过去。</p>
<hr>
<ul>
<li>修改hosts方法。<a href="https://laod.org/hosts/2016-google-hosts.html" target="_blank" rel="external">具体信息看老D博客。</a><ul>
<li>网速慢，看个网页可以,视频/下载文件够呛。 </li>
<li>有时候，可用的google IP会被防火墙检测到，进而加到屏蔽列表里。所以，这个hosts文件就需要经常更新，如何更新呢？其实就是检测谷歌IP—测试是否可用—加到文件里。这一任务挺重复且重，所以最宜交给脚本程序来搞定了（有能力的可以自己来，懒的话Github找现成的）</li>
</ul>
</li>
<li>翻墙软件“自由门”<ul>
<li>网速大部分时间都比较快，这时YouTube视频是没问题的。</li>
</ul>
</li>
<li>Lantern(蓝灯）<ul>
<li><a href="http://pan.baidu.com/s/1hsCs3pa" target="_blank" rel="external">如果此处链接失效，关键词Github Lantern自行搜索</a> 密码：ypf9</li>
<li>傻瓜化操作，网速大部分时间挺快。视频没问题。</li>
</ul>
</li>
<li>XX-Net<ul>
<li>网速快，较稳定。</li>
<li>需要一些设置。<a href="https://github.com/XX-net/XX-Net/wiki/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3" target="_blank" rel="external">参见中文文档</a></li>
</ul>
</li>
<li>购买VPN服务<ul>
<li>比上面的都稳定，网速也很快。就是第一次配置时较麻烦。</li>
</ul>
</li>
<li>自己架设VPN<ul>
<li>稳定性和网速 和架设者本人有紧密的关系。</li>
</ul>
</li>
<li>Tor <ul>
<li>安全性<strong>很高</strong>。就算你用它来做坏事，也基本不会出问题。当然作为一名社会主义建设者，你是不该做坏事的。</li>
<li>网速快慢和使用的网桥不同而不同。</li>
</ul>
</li>
</ul>
<hr>
<p><strong>博主推荐：</strong></p>
<ul>
<li>Windows平台： lantern</li>
<li>Mac/Linux 平台： XX-Net</li>
</ul>
]]></content>
    </entry>
    
  
  
</search>
